name: CI

on:
  push:
    branches: [ "v2" ]
  pull_request:
    branches: [ "v2" ]

env:
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest
  CONTAINER_NAME: ${{ github.repository }}-app
  PORT: 3000

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - name: Install dependencies
        run: go get ./pkg/app

      - name: Run tests
        run: go test -v ./...
  
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Login to DigitalOcean
  #       uses: digitalocean/action-doctl@2.5.1
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_TOKEN }}

  #     - name: Login DigitalOcean to Docker
  #       run: doctl

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Login to DigitalOcean 
  #       uses: digitalocean/action-doctl@v2.5.1
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_TOKEN }}

  #     - name: Pull and run Docker image
  #       run: |
  #         doctl compute ssh music-guide --ssh-command \
  #           "docker pull ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} &&
  #         docker run -d -it --rm -p ${{ env.PORT }}:${{ env.PORT }} --name ${{ env.CONTAINER_NAME }} \
  #           ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
